section.blog

  .primary-title
    h2
      = title_for("our-blog")

  = link_to blog_articles_path, class: 'l-back' do
    span.icon-double-angle-left
    span.l-back-text Volver 

  .column.singlepost
    article
      h2= article.title

      .metadata-header
        .author
          i.icon-user-2
          = article.author

        .date
          i.icon-calendar-3
          = article.publication_date.strftime('%-d de %B, %Y')
        .comment.comment_counter
          = article.comments_count
          i.icon-comment

      - if article.image?
        picture alt=""
          source src=article.image.url(:post_thumb)

      - if article.image_caption.present?
        .labelphoto= article.image_caption
      - else
        br

      #js-content-article
        = textilize(parse_regex(article.content))
      = raw(article.snippet)

      .metadata-footer
        ul.social
          li
            a href="#{facebook_share(article)}" target="_blank"
              i.icon-facebook
              span facebook
          li
            a href="#{twitter_share(article, article.summary)}" target="_blank"
              i.icon-twitter
              span twitter
          li
            a href="#{google_share(article)}" target="_blank"
              i.icon-googleplus
              span google+
          li
            a href="#{linkedin_share(article, article.title, article.summary)}" target="_blank"
              i.icon-linkedin
              span linkedin

        - if article.categories
          ul.tags
            - article.categories.each do |category|
              li
                = link_to category.name, blog_category_path(category.slug)
    .pagination
      - if pager.previous
        = link_to blog_article_path(pager.previous), class: 'l-previous' do
          span.icon-double-angle-left
          span.l-back-text Previous

      - if pager.next
        = link_to blog_article_path(pager.next), class: 'l-next' do
          span.l-back-text Next
          span.icon-double-angle-right

    = render "blog/articles/modules/discussion"
    = render "blog/articles/modules/post-comment-form"
  = render "blog/articles/modules/aside"

- content_for :head do
  meta property="og:title"  content="#{article.title}"
  meta property="og:type"   content="website"
  meta property="og:url"    content='#{raw(blog_article_url(article))}'
  meta property="og:image"  content='#{ raw(article.image? ? article.image.url(:normal) : "http://assets.insignia4u.com/projects/images/000/000/018/Insignia-Logo-Square-Facebook_normal.jpg")}'
  meta property="og:description"    content='#{article.description}'
- content_for :title do
  title Ruby on Rails Web Development | Insignia | #{article.title}
